{"version":3,"sources":["Components/Section.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js"],"names":["Section","title","children","defaultProps","Form","state","name","number","inputChange","e","currentTarget","value","setState","formSabmit","preventDefault","props","onSubmit","resetForm","className","this","type","pattern","required","onChange","Component","Filter","filter","ContactList","contacts","onDeleteContact","map","contact","onClick","id","App","formSabmitData","temp","shortid","generate","length","prevState","alert","filterContacts","toLowerCase","includes","deleteContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d21870cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <div>\r\n        {title && <h2>{title}</h2>}\r\n        {children}\r\n    </div>\r\n);\r\n\r\nSection.defaultProps = {\r\n    title: \"\",\r\n    children: [],\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport './Form.css';\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    inputChange = e => {\r\n      const { name, value } = e.currentTarget;\r\n      this.setState({ [name]: value});\r\n    };\r\n    formSabmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.resetForm();\r\n    };\r\n\r\n    resetForm = () => { this.setState({ name: '', number: '' }); };\r\n    \r\n    render() {\r\n        return (\r\n            <form  className=\"form\"onSubmit={this.formSabmit}>\r\n             <label >\r\n               Имя\r\n               <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.inputChange}\r\n               />\r\n                </label>\r\n             <label >\r\n               Номер телефона\r\n               <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                value={this.state.number}\r\n                onChange={this.inputChange}\r\n               />\r\n             </label>\r\n             <button title=\"submit\">Добавить контакт</button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Filter.css\";\r\nconst Filter = ({filter, inputChange}) => (\r\n    <label className=\"Filter\">\r\n        Поиск контакта по имени\r\n        <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={filter}\r\n        onChange={inputChange}\r\n        />\r\n        </label>\r\n);\r\nFilter.defaultProps = {\r\n    filter: '',\r\n};\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    inputChange: PropTypes.func,\r\n};\r\nexport default Filter;","import React from 'react';\r\nimport './ContactList.css';\r\nimport PropTypes from 'prop-types';\r\nconst ContactList = ({ contacts , onDeleteContact}) => (\r\n   <ul className=\"ContactList\">\r\n      {contacts.map(contact =>\r\n         <li key={contact.id} >\r\n            <p>{contact.name}: {contact.number}</p>\r\n            <button onClick={()=>onDeleteContact(contact.id)}>Удалить</button>\r\n         </li>\r\n      )}\r\n    </ul> \r\n);\r\nContactList.defaultProps = {\r\n    contacts: [],\r\n};\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    inputChange: PropTypes.func,\r\n};\r\nexport default ContactList;","import React, { Component} from 'react';\nimport './App.css';\nimport Section from './Components/Section';\nimport Form from './Components/Form';\nimport Filter from './Components/Filter';\nimport ContactList from './Components/ContactList';\nimport shortid from 'shortid'\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: ''\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) { this.setState({contacts: parsedContacts});}\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }; \n\n  formSabmitData = ({ name, number }) => {\n    const temp = {\n      id: `id-${shortid.generate()}`,\n      name,\n      number\n    };\n    if (this.state.contacts.filter(e => e.name === temp.name).length === 0) {\n      this.setState(prevState => ({ contacts: [...prevState.contacts, temp], }));\n    }\n    else {\n      alert(`${name} уже существует в контактах!`);\n    }\n  };\n  \n  inputChange = e => {\n      const { name, value } = e.currentTarget;\n      this.setState({ [name]: value});\n  };\n\n  filterContacts = name => {\n   return this.state.contacts.filter(e => e.name.toLowerCase().includes(name.toLowerCase()) );\n    \n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({contacts: prevState.contacts.filter(contact => contact.id !== id),}));\n  };\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Section title=\"Телефонная книга\">\n          <Form onSubmit={this.formSabmitData}/>\n        </Section>\n        <Section title=\"Контакты\">\n          <Filter filter={this.state.filter} inputChange={this.inputChange}/>\n          <ContactList contacts={this.filterContacts(this.state.filter)} onDeleteContact={this.deleteContact}/>\n        </Section>\n      </div>\n    );\n   }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}